extends ../../../views/shared/_layout
block StylesBlock
    style.
        .node-item {
            border-radius: 0;cursor: pointer;
        }
        .active-node {
            outline: 4px solid #25d634;
        }

block ContentBlock

    .row
        .col-xs-12
            h3.page-title #{pageTitle}
    .row
        .col-xs-3
            - each node in data
                .card.node-item
                    .card-block.text-center
                        input(name='id', type='hidden', value=node._id)
                        div= node.hostname
        .col-xs-9.settings



block ScriptsPluginBlock
block ScriptsBlock
    include ../../../views/shared/_validate

    script(type='application/javascript').
        var settingsWords = !{JSON.stringify(settingsWords)};
        $(function () {
            setActiveLink('#monitoring', '#monitoring-settings-sub');

            $('.node-item').first().addClass('active-node').end().on('click', function () {
                $('.active-node').removeClass('active-node');
                $(this).addClass('active-node');

                var $elem = $('.settings');
                $elem.empty();

                $elem.append('<div class="refresh-icon text-center">' +
                        '<i class="fa fa-refresh fa-spin fa-4x" style="color: lightgray"></i></div>');

                var id = $(this).find('input[name="id"]').val();

                $.ajax({
                    url: '/monitoring/settings/' + id, cache: false, success: function (result) {
                        if (result.ok) {
                            $elem.empty();
                            $elem.append('<div class="card metric-settings"><div class="card-header">' + settingsWords.title + '</div><div class="card-block"></div></div>');


                            if (!result.data.metrics.length) {
                                $elem.find('.card-block').append(settingsWords.emptyData);
                                return;
                            }

                            var $select = $('<select class="form-control form-select-sm margin-10-right"></select>');
                            var $selectComponent = $('<select class="form-control form-select-sm"></select>');

                            var metrics = {};

                            result.data.metrics.forEach(function (item) {
                                if ((item.component == null || !item.component.length) && !metrics.hasOwnProperty(item.sys_name)) {
                                    metrics[item.sys_name] = [];
                                } else if (item.component != null && item.component.length && !metrics.hasOwnProperty(item.sys_name.replace('.' + item.component, ''))) {
                                    metrics[item.sys_name.replace('.' + item.component, '')] = [item.component];
                                } else {
                                    if (item.component != null && item.component.length) {
                                        metrics[item.sys_name.replace('.' + item.component, '')].push(item.component);
                                    }
                                }
                            });

                            for (var k in metrics) {
                                var temp = metrics[k].join(',');
                                $select.append('<option data-components="' + temp + '">' + k + '</option>');
                            }

                            $select.on('change', function (e) {
                                var val = $(this).find('option:selected').data('components');

                                $selectComponent.empty();
                                $selectComponent.append('<option value="all">all</option>');


                               var arr =  val.split(',');
                                arr.sort();
                                arr.forEach(function (item) {
                                    if (item.length)
                                        $selectComponent.append('<option value="' + item + '">' + item + '</option>');
                                });
                            }).trigger('change');

                            $elem.find('.card-block')
                                    .append('<div class="row margin-bottom-10">' +
                                            '<div class="col-xs-5 metrics-scope"></div>' +
                                            '<div class="col-xs-3 components-scope"></div>' +
                                            '<div class="col-xs-4 action-scope"></div></div>')
                                    .find('.metrics-scope').append($select)
                                    .end()
                                    .find('.components-scope').append($selectComponent);

                            var $add = $('<a href="#add" class="btn btn-success btn-sm margin-10-right" title="' + crudText.add + '"><i class="fa fa-plus"></i></a>');
                            $elem.find('.action-scope').append($add);
                            $elem.find('.card-block').append('<div class="row"><label class="col-xs-4">' + settingsWords.existRules + '</label><ul class="col-xs-4"></ul></div>');

                            var $ul = $elem.find('ul');

                            result.data.settings.forEach(function (item) {
                                $ul.append(
                                        '<li>' + item.sys_name.replace('.' + item.component, '') + '[' + item.component + '] ' +
                                        '<a class="remove-exception" href="#remove" data-metric="' + item.sys_name + '" data-component="' + item.component +
                                        '">' + crudText.remove + '</a></li>');
                            });

                            function onRemove(e) {
                                e.preventDefault();

                                var $row = $(this).closest('.row');
                                var id = $('.active-node').find('input[name="id"]').val();

                                var metric = $(this).data('metric');
                                var component = $(this).data('component').toString();

                                $.ajax({
                                    url: '/monitoring/settings/' + id,
                                    type: 'DELETE',
                                    contentType: 'application/json',
                                    data: JSON.stringify({_csrf: _csrf, metric: metric, component: component}),
                                    dataType: 'json',
                                    error: function (XMLHttpRequest, textStatus, errorThrow) {
                                        alert(XMLHttpRequest + '\n' + textStatus + '\n' + errorThrow);
                                    },
                                    success: function (result) {
                                        if (result.ok) {
                                            toastr.success(result.msg);
                                            $elem.find('ul li:contains(' + metric.replace('.' + component, '') + '[' + component + '])').remove();

                                        } else {
                                            toastr.error(result.msg);
                                        }
                                    }
                                })
                            }

                            $add.on('click', function (e) {
                                e.preventDefault();

                                var $row = $(this).closest('.row');
                                var id = $('.active-node').find('input[name="id"]').val();

                                var metric = $row.find('.metrics-scope option:selected').val();
                                var component = $row.find('.components-scope option:selected').val();

                                if (component !== 'all') {
                                    metric = metric.split('.');
                                    metric.splice(2, 0, component);
                                    metric = metric.join('.');
                                }

                                $.ajax({
                                    url: '/monitoring/settings/' + id,
                                    type: 'PUT',
                                    contentType: 'application/json',
                                    data: JSON.stringify({_csrf: _csrf, metric: metric, component: component}),
                                    dataType: 'json',
                                    error: function (XMLHttpRequest, textStatus, errorThrow) {
                                        alert(XMLHttpRequest + '\n' + textStatus + '\n' + errorThrow);
                                    },
                                    success: function (result) {
                                        if (result.ok) {
                                            toastr.success(result.msg);

                                            if (component !== 'all') {
                                                metric = metric.replace('.' + component, '')
                                            }

                                            var $li = $('<li>' + metric + '[' + component + '] ' +
                                                    '<a class="remove-exception" href="#remove" data-metric="' + metric + '" data-component="' + component +
                                                    '">' + crudText.remove + '</a></li>');
                                            $li.find('a').on('click', onRemove);
                                            $elem.find('ul').append($li);

                                        } else {
                                            toastr.error(result.msg);
                                        }
                                    }
                                });
                            });

                            $('.remove-exception').on('click', onRemove);


                        } else {
                            toastr.error(result.msg);
                        }
                    }
                });
            });

            $('.node-item').first().trigger('click');
        });