extends ../../../views/shared/_layout
block StylesBlock
block ContentBlock

    .row
        .col-xs-12
            h3.page-title #{pageTitle}
    .row
        .col-xs-4.col-xs-offset-4
            .card
                .card-header= agentChooseTitle
                .card-block.text-center
                    //-| #{agent}:&nbsp
                    .input-group(style='display: block')
                        select.form-select-sm.margin-10-right(name='worker')
                            option(value='')= selectAgent
                            each worker in data.workers
                                option(value=worker._id, data-server=worker.server_id.toString()) #{worker.server_name} [#{worker.ip}]

                        a.btn.btn-success-outline.btn-sm.disabled.refresh-data(href='#refres', title=buttonsTxt.refresh)
                            i.fa.fa-refresh

    .modules-scope


block ScriptsPluginBlock
block ScriptsBlock

    script(type='application/javascript', src='/js/bootstrap-table.js')
    script(type='application/javascript').
        var nodeWords = !{JSON.stringify(nodeModule)};
        var osWords = !{JSON.stringify(osModule)};
        var commonWords = !{JSON.stringify(commonModule)};

        var serverId = null;
        var agentId = null;
        var table = null;

        function refreshData() {
            table.empty();

            $.get('/monitoring/servers/' + serverId + '/modules', function (result) {
                if (result.ok) {
                    console.log(result.data);

                    var i = result.data.length;
                    while (i--) {
                        (function (i) {
                            var sysName = result.data[i].sys_name;
                            $.getScript('/js/monitoring/' + sysName + '.js', function (data, textStatus, jqxhr) {
                                if (textStatus == 'success') {
                                    try {
                                        var initFunc = 'Init' + sysName.toUpperCase();
                                        var words = $.extend({}, commonWords, window[sysName + 'Words']);
                                        window[initFunc](table, agentId, result.data[i], words);
                                    }
                                    catch (e) {
                                        console.error(e);
                                    }
                                }
                            });
                        })(i);
                    }
                } else {
                    toastr.error(result.msg);
                }
            });
        }

        $(function () {
            setActiveLink('#monitoring', '#monitoring-servers-sub');
            table = new BootstrapTable('.modules-scope');
            var $rBtn = $('.refresh-data');

            $rBtn.on('click', function (e) {
                e.preventDefault();

                refreshData();
            });

            $('select[name="worker"]').on('change', function (e) {
                var $opt = $('option:selected', this);
                serverId = $opt.data('server');
                agentId = $opt.val();

                if (agentId == '') {
                    table.empty();
                    $rBtn.addClass('disabled');
                } else {
                    $rBtn.removeClass('disabled');
                    refreshData();
                }
            });
        });