extends ../shared/_layout
block StylesBlock
block ContentBlock

    .row
        .col-xs-12
            h3.page-title #{pageTitle}
    .row
        .col-xs-12
            .card
                .card-header
                    | #{table.name}
                    a.btn.btn-success.btn-sm.pull-xs-right(style='margin-top: -8px;', href='#create-group-modal', data-toggle='modal')= buttonsTxt.create
                .card-block
                    table.table
                        thead
                            tr
                                th #
                                th #{table.columns.sysName}
                                th #{table.columns.name}
                                th #{table.columns.server}
                                th #{table.columns.agents}
                                th(style='width: 125px')
                        tbody
                            - var i = 1;
                            - each group in data.groups
                                tr.tr-vertical
                                    input(name='id', type='hidden', value=group._id)
                                    td #{i++}
                                    td= group.sys_id
                                    td= group.name
                                    td= group.server_id.server_name
                                    td
                                        if group.workers.length == 1
                                            span.label.label-success #{group.workers[0].server_name}
                                        else
                                            ul.list-inline
                                                - each worker in group.workers
                                                    li: span.label.label-success #{worker.server_name}
                                    td
                                        a.btn.btn-danger.delete-btn(href='/servers/groups/' + group._id, title=buttonsTxt.delete)
                                            i.fa.fa-trash-o

    #create-group-modal.modal.fade(tabindex='-1', role='dialog', aria-hidden='true')
        .modal-dialog
            .modal-content
                form#create-group-form(method='POST', action='/servers/groups', autocomplete='off')
                    input(type='hidden', name='_csrf', value='#{csrfToken}')
                    .modal-header
                        button.close(type='button', data-dismiss='modal', aria-label='Close')
                            span(aria-hidden='true') &times;
                        h4.modal-title= modal.title
                    .modal-body.modal-align
                        .form-group.row
                            label.col-xs-4.form-control-label #{modal.fields.name}
                            .col-xs-8
                                .block
                                    input.form-control(name='name', placeholder='', type='text')
                        .form-group.row
                            label.col-xs-4.form-control-label #{modal.fields.server}
                            .col-xs-8
                                select.form-control(name='server')
                                    - each server in data.servers
                                        option(value=server._id)= server.server_name
                        .form-group.row
                            label.col-xs-4.form-control-label #{modal.fields.agents}
                            .col-xs-8
                                - each worker in data.workers
                                    .checkbox
                                        label
                                            input(name='worker', type='checkbox')
                                            input(name='worker-id', type='hidden', value=worker._id)
                                            | &nbsp;#{worker.server_name}


                    .modal-footer
                        button.btn.btn-default(type='button', data-dismiss='modal')= buttonsTxt.close
                        button.btn.btn-primary(type='submit')= buttonsTxt.create


block ScriptsPluginBlock
block ScriptsBlock
    include ../shared/_validate
    script(type='application/javascript').
        var words = {
            empty: '!{emptyAgents}'
        };

        $(function () {
            setActiveLink('#server', '#server-groups-sub');

            var $createModal = $('#create-group-modal');

            validateModal(null, $createModal, {
                name: {
                    required: true,
                    maxlength: 100
                },
                server: {
                    required: true
                }
            }, function () {
                var name = $('input[name="name"]', $createModal).val();
                var server = $('select[name="server"] > option:selected', $createModal).val();
                var agents = [];

                $('input[name="worker"]', $createModal).each(function () {
                    if (this.checked) {
                        agents.push($(this).parent().find('input[name="worker-id"]').val());
                    }
                });

                if (!agents.length) {
                    return toastr.warning(words.empty);
                }

                $('button[type="submit"]', $createModal).attr('disabled', true);

                $.ajax({
                    url: '/servers/groups',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        _csrf: _csrf,
                        name: name,
                        server: server,
                        agents: agents
                    }),
                    dataType: 'json',
                    cache: false,
                    error: function (XMLHttpRequest, textStatus, errorThrow) {
                        alert(XMLHttpRequest + '\n' + textStatus + '\n' + errorThrow);
                    },
                    success: function (result) {
                        if (result.ok) {
                            location.reload();
                        } else {
                            toastr.error(result.msg);
                            $('button[type="submit"]', $createModal).attr('disabled', false);
                        }
                    }
                });
            });

            $('.delete-btn').on('click', function (e) {
                e.preventDefault();

                if (!confirm('Are ypu sure?')) {
                    return;
                }

                var $elem = $(this);

                $elem.addClass('disabled');

                $.ajax({
                    url: $elem.attr('href'),
                    type: 'DELETE',
                    contentType: 'application/json',
                    data: JSON.stringify({_csrf: _csrf}),
                    dataType: 'json',
                    cache: false,
                    error: function (XMLHttpRequest, textStatus, errorThrow) {
                        alert(XMLHttpRequest + '\n' + textStatus + '\n' + errorThrow);
                    },
                    success: function (result) {
                        if (result.ok) {
                            $elem.closest('tr').remove();

                            $('tbody').find('tr').each(function (index) {
                                $(this).find('td').first().text(index + 1);
                            });
                        } else {
                            toastr.error(result.msg);
                            $elem.removeClass('disabled');
                        }
                    }
                });
            });
        });